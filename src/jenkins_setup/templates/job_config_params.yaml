'quiet_period': '<quietPeriod>@(QUIET_PERIOD_DURATION)</quietPeriod>'

'custom_workspace': '<customWorkspace>@(CUSTOM_WORKSPACE_DIR)</customWorkspace><childCustomWorkspace>@(CUSTOM_WORKSPACE_CHILD_DIR)</childCustomWorkspace>'

'triggers':
  'none': '<triggers class="vector"/>'
  'periodic':
    'continuous': ' <triggers class="vector"> <hudson.triggers.TimerTrigger> <spec>*/5 * * * *</spec> </hudson.triggers.TimerTrigger> </triggers>'
    'nightly': ' <triggers class="vector"> <hudson.triggers.TimerTrigger> <spec>0 3 * * *</spec> </hudson.triggers.TimerTrigger> </triggers>'
    'daily': ' <triggers class="vector"> <hudson.triggers.TimerTrigger> <spec>0 13 * * *</spec> </hudson.triggers.TimerTrigger> </triggers>'
    'weekly': ' <triggers class="vector"> <hudson.triggers.TimerTrigger> <spec>0 2 * * 0</spec> </hudson.triggers.TimerTrigger> </triggers>'
    'monthly': ' <triggers class="vector"> <hudson.triggers.TimerTrigger> <spec>0 4 1 * *</spec> </hudson.triggers.TimerTrigger> </triggers>'
  'vcs': '<triggers class="vector"> <hudson.triggers.SCMTrigger> <spec>H/10 * * * *</spec> </hudson.triggers.SCMTrigger> </triggers>'
  'resulttrigger': '<triggers class="vector"> <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger> <spec>* * * * *</spec> <jobsInfo> <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo> <jobName>@(RESULTTRIGGER)</jobName> <checkedResults> @(RESULTS) </checkedResults> </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo> </jobsInfo> </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger> </triggers>'
  'resulttrigger_results': '<org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult> <checked>@(RESULT_STATUS)</checked> </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>'

'vcs':
  'none' : '<scm class="hudson.scm.NullSCM"/>'
  'svn' : '<scm class="hudson.scm.SubversionSCM"> <locations> <hudson.scm.SubversionSCM_-ModuleLocation> <remote>@(URI)</remote> <local>monitored_vcs</local> </hudson.scm.SubversionSCM_-ModuleLocation> </locations> <useUpdate>false</useUpdate> <doRevert>false</doRevert> <excludedRegions/> <includedRegions/> <excludedUsers/> <excludedRevprop/> <excludedCommitMessages/> </scm> <scmCheckoutRetryCount>3</scmCheckoutRetryCount>'
  'hg' : '<scm class="hudson.plugins.mercurial.MercurialSCM"> <source>@(URI)</source> <modules/> <revisionType>BRANCH</revisionType><revision>@(BRANCH)</revision><clean>false</clean><disableChangeLog>false</disableChangeLog></scm>'
  'git': '<scm class="hudson.plugins.git.GitSCM"> <configVersion>2</configVersion> <userRemoteConfigs> <hudson.plugins.git.UserRemoteConfig> <name>origin</name> <refspec>+refs/heads/@(BRANCH):refs/remotes/origin/@(BRANCH)</refspec> <url>@(URI)</url> </hudson.plugins.git.UserRemoteConfig> </userRemoteConfigs> <branches> <hudson.plugins.git.BranchSpec> <name>origin/@(BRANCH)</name> </hudson.plugins.git.BranchSpec> </branches> <disableSubmodules>false</disableSubmodules> <recursiveSubmodules>true</recursiveSubmodules> <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations> <authorOrCommitter>false</authorOrCommitter> <clean>false</clean> <wipeOutWorkspace>false</wipeOutWorkspace> <pruneBranches>false</pruneBranches> <remotePoll>false</remotePoll> <ignoreNotifyCommit>false</ignoreNotifyCommit> <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/> <gitTool>Default</gitTool> <submoduleCfg class="list"/> <relativeTargetDir>monitored_vcs</relativeTargetDir> <reference/> <excludedRegions/> <excludedUsers/> <gitConfigName/> <gitConfigEmail/> <skipTag>false</skipTag> <includedRegions/> <scmName/> </scm> <scmCheckoutRetryCount>3</scmCheckoutRetryCount>'

'junit_testresults': '<hudson.tasks.junit.JUnitResultArchiver> <testResults>@(TEST_RESULTS_DIR)/*.xml</testResults> <keepLongStdio>false</keepLongStdio> <testDataPublishers/> </hudson.tasks.junit.JUnitResultArchiver>'

'mailer': '<hudson.tasks.Mailer> <recipients>@(EMAIL)</recipients> <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild> <sendToIndividuals>@(EMAIL_TO_COMMITTER)</sendToIndividuals> </hudson.tasks.Mailer>'

'emailext': '<hudson.plugins.emailext.ExtendedEmailPublisher>
      <recipientList>@(EMAIL)</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>@(EMAIL_TO_COMMITTER)</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <replyTo></replyTo>
          </email>
        </hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>@(EMAIL_TO_COMMITTER)</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <replyTo></replyTo>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.FixedTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <sendToDevelopers>@(EMAIL_TO_COMMITTER)</sendToDevelopers>
            <sendToRequester>false</sendToRequester>
            <includeCulprits>false</includeCulprits>
            <sendToRecipientList>true</sendToRecipientList>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <replyTo></replyTo>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FixedTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
<defaultSubject>$BUILD_STATUS: @(JOBNAME) of ${ENV, var="repository"};  ${ENV, var="ros_distro"}, ${ENV, var="ubuntu_distro"}, ${ENV, var="arch"} - Build # $BUILD_NUMBER!</defaultSubject>
      <defaultContent>${JELLY_SCRIPT,template=&quot;html-with-health-builds-tests&quot;}</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>true</attachBuildLog>
      <replyTo></replyTo>
      <matrixTriggerMode>ONLY_CONFIGURATIONS</matrixTriggerMode>
    </hudson.plugins.emailext.ExtendedEmailPublisher>'

'parameters':
  'choice': '<hudson.model.ParametersDefinitionProperty> 
               <parameterDefinitions>
                 <hudson.model.ChoiceParameterDefinition>
                   <name>repository</name>
                   <description></description>
                   <choices class="java.util.Arrays$ArrayList">
                     <a class="string-array"> @(CHOICES) </a>
                   </choices>
                 </hudson.model.ChoiceParameterDefinition>
               </parameterDefinitions> 
             </hudson.model.ParametersDefinitionProperty>'
  'string': '<string>@(STRING)</string>'

'authorizationmatrix':
    'basic': '<hudson.security.AuthorizationMatrixProperty> @(PERMISSION) </hudson.security.AuthorizationMatrixProperty>'
    'read': '<permission>hudson.model.Item.Read:@(USERNAME)</permission>'
    'build': '<permission>hudson.model.Item.Build:@(USERNAME)</permission>'
    'workspace': '<permission>hudson.model.Item.Workspace:@(USERNAME)</permission>'

'parameterizedtrigger':
  'basic':
    '<hudson.plugins.parameterizedtrigger.BuildTrigger> <configs> @(TRIGGERS) </configs> </hudson.plugins.parameterizedtrigger.BuildTrigger>'
  'trigger':
    '<hudson.plugins.parameterizedtrigger.BuildTriggerConfig> <configs> @(CONFIGS) </configs> <projects> @(PROJECTLIST) </projects> <condition>@(CONDITION)</condition> <triggerWithNoParameters>@(NOPARAM)</triggerWithNoParameters> </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>'
  'matrix_subset':
    '<hudson.plugins.parameterizedtrigger.matrix.MatrixSubsetBuildParameters> <filter>@(FILTER)</filter> </hudson.plugins.parameterizedtrigger.matrix.MatrixSubsetBuildParameters>'
  'predef_param':
    '<hudson.plugins.parameterizedtrigger.PredefinedBuildParameters> <properties>@(PARAMETER)</properties> </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>'

'matrix':
  'basic': '<axes> @(AXES) <hudson.matrix.LabelAxis> <name>label</name> <values> @(NODE) </values> </hudson.matrix.LabelAxis> </axes> <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl"> <runSequentially>false</runSequentially> </executionStrategy>'
  'axis': '<hudson.matrix.TextAxis> <name>@(NAME)</name> <values> @(VALUES) </values> </hudson.matrix.TextAxis>'
  'value': '<string>@(VALUE)</string>'
  'filter': '<combinationFilter>@(FILTER)</combinationFilter>'

'jointrigger': '<join.JoinTrigger> <joinProjects>@(JOIN_PROJECTS)</joinProjects> <joinPublishers> @(PARAMETERIZED_TRIGGER) </joinPublishers> <evenIfDownstreamUnstable>@(JOIN_UNSTABLE)</evenIfDownstreamUnstable> </join.JoinTrigger>'

'groovypostbuild':
    'basic': "<org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder> <groovyScript>@(GROOVYPB_SCRIPT)</groovyScript> <behavior>@(GROOVYPB_BEHAVIOR)</behavior> </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>"
    'script':
        'enable': "if(manager.build.result.isBetterOrEqualTo(hudson.model.Result.FAILURE)) {\n manager.listener.logger.println('Because this build did not fail:')\n for (project in @(PROJECT_LIST)) {\n  manager.listener.logger.println(' - ' + project)\n  manager.hudson.getItem(project).enable()\n }\n manager.listener.logger.println('will be enabled.')\n}"
        'join_enable': ""
        'disable': "for (project in @(PROJECT_LIST)) {\n manager.listener.logger.println('Disable ' + project + ' job')\n manager.hudson.getItem(project).disable()\n}"

'postbuildtrigger': '<hudson.tasks.BuildTrigger> <childProjects>@(CHILD_PROJECTS)</childProjects> <threshold> <name>@(THRESHOLD)</name> </threshold> </hudson.tasks.BuildTrigger>'

'warningspublisher': '<hudson.plugins.warnings.WarningsPublisher plugin="warnings@4.35">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[WARNINGS] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.54">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>true</doNotResolveRelativePaths>
      <parserConfigurations/>
      <consoleParsers>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>GNU Compiler 4 (gcc)</parserName>
        </hudson.plugins.warnings.ConsoleParser>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>GNU Make + GNU Compiler (gcc)</parserName>
        </hudson.plugins.warnings.ConsoleParser>
      </consoleParsers>
    </hudson.plugins.warnings.WarningsPublisher>'

'cppcheckpublisher': '<org.jenkinsci.plugins.cppcheck.CppcheckPublisher plugin="cppcheck@1.14">
      <cppcheckConfig>
        <pattern>static_analysis_results/cppcheck.xml</pattern>
        <ignoreBlankFiles>true</ignoreBlankFiles>
        <allowNoReport>true</allowNoReport>
        <configSeverityEvaluation>
          <threshold></threshold>
          <newThreshold></newThreshold>
          <failureThreshold></failureThreshold>
          <newFailureThreshold></newFailureThreshold>
          <healthy></healthy>
          <unHealthy></unHealthy>
          <severityError>true</severityError>
          <severityWarning>true</severityWarning>
          <severityStyle>true</severityStyle>
          <severityPerformance>true</severityPerformance>
          <severityInformation>true</severityInformation>
        </configSeverityEvaluation>
        <configGraph>
          <xSize>500</xSize>
          <ySize>200</ySize>
          <displayAllErrors>true</displayAllErrors>
          <displayErrorSeverity>false</displayErrorSeverity>
          <displayWarningSeverity>false</displayWarningSeverity>
          <displayStyleSeverity>false</displayStyleSeverity>
          <displayPerformanceSeverity>false</displayPerformanceSeverity>
          <displayInformationSeverity>false</displayInformationSeverity>
        </configGraph>
      </cppcheckConfig>
    </org.jenkinsci.plugins.cppcheck.CppcheckPublisher>'

'postbuildtask': "<hudson.plugins.postbuildtask.PostbuildTask> <tasks> <hudson.plugins.postbuildtask.TaskProperties> <logTexts> <hudson.plugins.postbuildtask.LogProperties> <logText>Building remotely on</logText> <operator>AND</operator> </hudson.plugins.postbuildtask.LogProperties> </logTexts> <EscalateStatus>false</EscalateStatus> <RunIfJobSuccessful>false</RunIfJobSuccessful> <script>#!/bin/bash\nif [ -d $WORKSPACE/../aux ]; then\nsudo rm -rf $WORKSPACE/../aux\nfi</script> </hudson.plugins.postbuildtask.TaskProperties> </tasks> </hudson.plugins.postbuildtask.PostbuildTask>"

'pipelinetrigger': '<au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger> <downstreamProjectNames>@(PIPELINETRIGGER_PROJECT)</downstreamProjectNames> </au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger>'

'execute_shell': '<builders> <hudson.tasks.Shell> <command>@(COMMAND)</command> </hudson.tasks.Shell> </builders>'

'build_timeout': '<hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.11">
      <timeoutMinutes>360</timeoutMinutes>
      <failBuild>true</failBuild>
      <writingDescription>false</writingDescription>
      <timeoutPercentage>0</timeoutPercentage>
      <timeoutType>absolute</timeoutType>
      <timeoutMinutesElasticDefault>3</timeoutMinutesElasticDefault>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>'

'ws_cleanup': '<hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.20">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete>sudo rm -rf $WORKSPACE</externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>'

'copy_to_slave': '<com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper plugin="copy-to-slave@1.4.3">
      <includes>jenkins_setup/**, jenkins_config/**, chroot_tarballs/**/@(BASETGZ), .ssh/**</includes>
      <excludes></excludes>
      <flatten>false</flatten>
      <includeAntExcludes>false</includeAntExcludes>
      <hudsonHomeRelative>false</hudsonHomeRelative>
      <relativeTo>userContent</relativeTo>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper>'

'copy_to_slave_hwjobs': '<com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper plugin="copy-to-slave@1.4.3">
      <includes>jenkins_setup/**, jenkins_config/**, .ssh/**</includes>
      <excludes></excludes>
      <flatten>false</flatten>
      <includeAntExcludes>false</includeAntExcludes>
      <hudsonHomeRelative>false</hudsonHomeRelative>
      <relativeTo>userContent</relativeTo>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveBuildWrapper>'

'copy_to_master': '<com.michelin.cio.hudson.plugins.copytoslave.CopyToMasterNotifier plugin="copy-to-slave@1.4.3">
      <includes>chroot_tarballs/in_use/@(BASETGZ)</includes>
      <excludes></excludes>
      <overrideDestinationFolder>true</overrideDestinationFolder>
      <destinationFolder>$JENKINS_HOME/userContent</destinationFolder>
      <runAfterResultFinalised>true</runAfterResultFinalised>
    </com.michelin.cio.hudson.plugins.copytoslave.CopyToMasterNotifier>'
